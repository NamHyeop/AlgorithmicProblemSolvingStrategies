#include<iostream>
#include<algorithm>
#include<cstring>
using namespace std;

int n;
int cache[101];
int S[100];

int search(int start)
{
	int &ret = cache[start + 1];
	if (ret != -1)
		return ret;
	ret = 1;

	for (int next = start + 1; next < n; next++)
	if ((start == -1) || (S[start] < S[next]))
		ret = max(ret, search(next) + 1);
	return ret;
}

int main(int argc, char * argv[])
{
	int Testcase;
	cin >> Testcase;

	if (0 >= Testcase || Testcase > 50)
		return 0;

	for (int i = 0; i < Testcase; i++)
	{
		cin >> n;
		if (n > 500)
			return 0;

		memset(cache, -1, sizeof(cache));

		for (int i = 0; i < n; i++)
		{
			cin >> S[i];
			if (S[i] > 100000 || S[i] < 1)
				return 0;
		}
		cout << search(-1) -1 << endl;
	}
	return 0;
}
